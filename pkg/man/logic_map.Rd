% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logic_map.R
\name{logic_map}
\alias{logic_map}
\title{Logical Occurrence Map}
\usage{
logic_map(
  fvec,
  avec = 1L,
  bvec = NULL,
  logical.out = FALSE,
  regex = FALSE,
  chatty = FALSE,
  ...
)
}
\arguments{
\item{fvec}{(vector) Values to be tested: may be a simple vector or a list of tuples}

\item{avec}{(vector) Optional vector of numeric values to project \emph{a}cross the result (must be the same length as \code{fvec} or length-1)}

\item{bvec}{(vector) A vector of unique values forming the basis of comparison  If given as a named vector, the output will preserve the names when creating columns; otherwise, the values of \code{bvec} are used as the names.}

\item{logical.out}{(logical, vector) When \code{TRUE}, the output consists of logical values; when a vector of length two (2) is supplied, the first value returns on \code{FALSE}, the second on \code{TRUE}; otherwise, the values of \code{avec} are used.  If the vector form is used, only the first value at each position is used to supply the choices.}

\item{regex}{(logical | \code{FALSE}) When \code{TRUE}, argument \code{bvec} is interpreted as patterns against which case-sensitive matches are sought are attempted.  This forces the value of \code{test} to invoke \code{\link[data.table]{like}}.}

\item{...}{See \code{\link[string]{stri_detect_regex}}: arguments \code{str} and \code{pattern} are internally passed and not needed.}
}
\value{
An array, the column names being the values of \code{bvec} or names of \code{bvec} if they exist.
}
\description{
\code{logic_map} conducts an existence test of a vector or list of tuples (\code{fvec}) against a vector of unique values (\code{bvec}) optionally mapping a supplied vector of values (\code{avec}) to all \code{TRUE} results. The "vanilla" run mode produces at one-hot encoded version of \code{fvec}, but it can produce augmented versions of of such depending on the structure of \code{fvec}.
}
\note{
\code{length(fvec) == length(avec)}

\code{fvec} and \code{bvec} must be of compatible types for comparison.
}
\section{\strong{Warning}}{

When combining with a source object, \code{fvec} must \strong{NOT} be sorted during the function call or the values will not map correctly in the output.
}

\examples{
x <- LETTERS[1:10]
logic_map(x)

k <- c("steelblue2", "tan3", "gray47", "gray27", "gray60")
x <- replicate(5, sample(k, 2) |> sort(), simplify = FALSE)
v <- sample(50, length(x), TRUE)
k
v
str(x)
# Vanilla:
# One-hot, default names:
logic_map(x)
# One-hot, custom names:
logic_map(x, bvec = k)
# One-hot, custom names, logical output:
logic_map(x, bvec = k, logical.out = TRUE)
# One-hot, custom names, regex matched, logical output:
logic_map(x, bvec = c(alpha = "blue", beta = 60, delta = "gray"), regex = TRUE, logical.out = TRUE)
# One-hot, valued, custom names, regex matched, numeric output:
logic_map(x, avec = v, bvec = c(alpha = "blue", beta = 60, delta = "gray"), regex = TRUE)

}
